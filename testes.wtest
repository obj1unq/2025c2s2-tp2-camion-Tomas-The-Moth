import camion.*
import cosas.*
describe "todoslostest"{
test "ejemplo" {
camion.cargar(bumblebee)
assert.(camion.cosas().contains(bumblebee))
camion.cargar(knightRider)
assert.(camion.cosas().contains(bumblebee) and camion.cosas().contains(knightRider)) 
camion.descargar(bumblebee)
assert.(camion.cosas().contains(knightRider))
assert.throwsException({camion.cargar(knightRider)})
assert.throwsException({camion.descargar(bumblebee)})
}

test "ejemplo 2: todos par"{
    arenaDeGranel.peso(50)
camion.cargar(bumblebee)
camion.cargar(arenaDeGranel)
assert.that(camion.todosPar())
arenaDeGranel.peso(51)
assert.notThat(camion.todosPar())
}

test "ejemplo 3: busqueda por peso"{
     arenaDeGranel.peso(50)
camion.cargar(bumblebee)
camion.cargar(arenaDeGranel)
assert.equals(arenaDeGranel,camion.algunoQuePesa(50))
assert.that(camion.hayAlgunoQuePesa(800))
assert.notThat(camion.hayAlgunoQuePesa(500))

}

test "ejemplo 4: carga total y exceso de peso"{
    paqueteDeLadrillos.ladrillos(300)
    camion.cargar(bumblebee)
    camion.cargar(paqueteDeLadrillos)
    assert.equals(2400,camion.pesoTotal())
    assert.notThat(camion.excesoDePeso())
    paqueteDeLadrillos.ladrillos(400)
    assert.equals(2600,camion.pesoTotal())
    assert.that(camion.excesoDePeso())
}

test "ejemplo 5: el de nivel"{
    camion.cargar(bumblebee)
    camion.cargar(bateriaAntiAerea)
    camion.cargar(residuosRadiactivos)
    assert.equals(bateriaAntiAerea,camion.esDeNivel(0))
     assert.equals(bumblebee,camion.esDeNivel(15))
    assert.equals(residuosRadiactivos,camion.esDeNivel(200))
    assert.throwsException({camion.esDeNivel(30)})
    bateriaAntiAerea.haymisiles(true)
    assert.equals(bateriaAntiAerea, camion.esDeNivel(100))

}


test "ejempo 6 cosas peligrosas"{
    bateriaAntiAerea.haymisiles(true)
    camion.cargar(bateriaAntiAerea)
    camion.cargar(knightRider)
    assert.that(camion.deMayorNivel(50).contains(bateriaAntiAerea))
    assert.that(camion.masNivelQue(bumblebee).contains(bateriaAntiAerea))
    assert.that(camion.deMayorNivel(2).contains(knightRider) and camion.deMayorNivel(2).contains(bateriaAntiAerea))
    assert.that(camion.masNivelQue(paqueteDeLadrillos).contains(knightRider) and camion.masNivelQue(paqueteDeLadrillos).contains(bateriaAntiAerea))
    assert.that(camion.deMayorNivel(200).isEmpty())
    assert.that(camion.masNivelQue(residuosRadiactivos).isEmpty())
}

test "ejemplo 7: puede circular"{
    camion.cargar(bumblebee)
    camion.cargar(paqueteDeLadrillos)
    bumblebee.modo(modoAuto)
    paqueteDeLadrillos.ladrillos(300)
    assert.that(camion.puedeCircular(20))
     paqueteDeLadrillos.ladrillos(400)
        assert.notThat(camion.puedeCircular(20))
    bumblebee.modo(modoRobot)
    paqueteDeLadrillos.ladrillos(300)
    assert.notThat(camion.puedeCircular(20))
}

test "ejemplo 8 las cosas extras"{
    assert.equals(100, contenedorPortuario.peso())
    assert.equals(0,contenedorPortuario.nivelPeligrosidad()) 
    contenedorPortuario.cargar(knightRider)
    arenaDeGranel.peso(50)
    contenedorPortuario.cargar(arenaDeGranel)
    assert.equals(10,contenedorPortuario.nivelPeligrosidad())
    assert.equals(650,contenedorPortuario.peso())
    embalajeDeSeguridad.embalar(knightRider)
    assert.equals(500,embalajeDeSeguridad.peso())
    assert.equals(5,embalajeDeSeguridad.nivelPeligrosidad())
    embalajeDeSeguridad.embalar(bumblebee)
    assert.equals(800,embalajeDeSeguridad.peso())
    assert.equals(7.5 ,embalajeDeSeguridad.nivelPeligrosidad())
}

test "ejemplo 9 entre dos valores"{
    camion.cargar(bumblebee)
    camion.cargar(paqueteDeLadrillos)
    paqueteDeLadrillos.ladrillos(300)
    assert.that(camion.cosaQuePesaEntre(5,100).isEmpty())  

    assert.notThat(camion.cosaQuePesaEntre(5,1000).isEmpty()) 
     assert.that(camion.cosaQuePesaEntre(900,1000).isEmpty())   
}

test "ejemplo 10 cosa que mas pesa"{
    camion.cargar(bumblebee)
    camion.cargar(paqueteDeLadrillos)
    paqueteDeLadrillos.ladrillos(300)
    assert.equals(bumblebee,camion.cosaQueMasPesa())
    camion.descargar(bumblebee)
    camion.descargar(paqueteDeLadrillos)
    assert.throwsException({camion.cosaQueMasPesa()})
}

test "ejemplo 11 pesos"{
    camion.cargar(bumblebee)
    paqueteDeLadrillos.ladrillos(300)
    camion.cargar(paqueteDeLadrillos)
    assert.that(camion.pesos().contains(600))
    assert.that(camion.pesos().contains(800))
    }
}

describe "totalBultos"{

test "caso 1"{
contenedorPortuario.cargar(knightRider)
contenedorPortuario.cargar(bumblebee)
embalajeDeSeguridad.embalar(residuosRadiactivos)
camion.cargar(contenedorPortuario)
camion.cargar(embalajeDeSeguridad)
camion.cargar(paqueteDeLadrillos)
paqueteDeLadrillos.ladrillos(50)
camion.cargar(arenaDeGranel)
camion.cargar(bateriaAntiAerea)
bateriaAntiAerea.haymisiles(false)
assert.equals(9, camion.bultosTotales())
}

test "caso 2"{
camion.cargar(paqueteDeLadrillos)
paqueteDeLadrillos.ladrillos(150)
camion.cargar(bateriaAntiAerea)
bateriaAntiAerea.haymisiles(true)
camion.cargar(contenedorPortuario)

assert.equals(5, camion.bultosTotales())
}
test "caso 3"{
camion.cargar(paqueteDeLadrillos)
paqueteDeLadrillos.ladrillos(350)
camion.cargar(arenaDeGranel)
assert.equals(4, camion.bultosTotales())
}

}

describe "sufrir accidente"{
    test "caso 1"{
        camion.cargar(bumblebee)
        camion.cargar(knightRider)
        bumblebee.modo(modoAuto)
        camion.cargar(embalajeDeSeguridad)
        embalajeDeSeguridad.embalar(residuosRadiactivos)
        residuosRadiactivos.peso(30)
        camion.cargar(arenaDeGranel)
        arenaDeGranel.peso(50)
        camion.cargar(paqueteDeLadrillos)
        paqueteDeLadrillos.ladrillos(100)
        camion.cargar(bateriaAntiAerea)
        bateriaAntiAerea.haymisiles(true)
        camion.sufrirAccidente()
        assert.equals(modoRobot, bumblebee.modo())
        assert.equals(45, residuosRadiactivos.peso())
        assert.equals(70, arenaDeGranel.peso())
        assert.equals(88, paqueteDeLadrillos.ladrillos())
        assert.notThat(bateriaAntiAerea.haymisiles())
    }

    test "caso 2"{
    camion.cargar(bumblebee)
    bumblebee.modo(modoRobot)
    camion.cargar(paqueteDeLadrillos)
    paqueteDeLadrillos.ladrillos(10)
    camion.cargar(residuosRadiactivos)
    residuosRadiactivos.peso(30)
    camion.cargar(bateriaAntiAerea)
    bateriaAntiAerea.haymisiles(false)
    camion.sufrirAccidente()
    assert.equals(modoAuto, bumblebee.modo())
    assert.equals(45, residuosRadiactivos.peso())
    assert.equals(0, paqueteDeLadrillos.ladrillos())
    assert.notThat(bateriaAntiAerea.haymisiles())
    }
}

describe "transportar"{
    method initialize() {
      almacen.guardar(knightRider)
     almacen.guardar(residuosRadiactivos) 
     camion.cargar(bumblebee)
     bumblebee.modo(modoAuto)
        camion.cargar(arenaDeGranel)
        arenaDeGranel.peso(50)
    }
    test "caso 1 ruta 9 exitoa"{
      camion.transportar(almacen, ruta9)
      assert.that(almacen.cosas().contains(knightRider) and almacen.cosas().contains(residuosRadiactivos) and almacen.cosas().contains(bumblebee) and almacen.cosas().contains(arenaDeGranel))
      assert.that(camion.cosas().isEmpty())
    }

    test "caso 2 ruta 9 fallido por exceso de peso"{
        bumblebee.modo(modoRobot)
        assert.throwsException( { camion.transportar(almacen, ruta9)})
        assert.that(almacen.cosas().contains(knightRider) and almacen.cosas().contains(residuosRadiactivos))
        assert.that(camion.cosas().contains(bumblebee) and camion.cosas().contains(arenaDeGranel))
    }
    test "caso 3 camins vecinales exitoso"{
        caminosVecinales.pesoMaximo(2000)
        camion.transportar(almacen, caminosVecinales)
        assert.that(almacen.cosas().contains(knightRider) and almacen.cosas().contains(residuosRadiactivos) and almacen.cosas().contains(bumblebee) and almacen.cosas().contains(arenaDeGranel))
        assert.that(camion.cosas().isEmpty())
    }

    test "caso 4 camins vecinales fallido por exceso de peso"{
        caminosVecinales.pesoMaximo(300)
        assert.throwsException( { camion.transportar(almacen, caminosVecinales)})
        assert.that(almacen.cosas().contains(knightRider) and almacen.cosas().contains(residuosRadiactivos))
        assert.that(camion.cosas().contains(bumblebee) and camion.cosas().contains(arenaDeGranel))
    }
}

